{"version":3,"sources":["components/Formulario.jsx","components/Articulo.jsx","components/Balance.jsx","App.js","reportWebVitals.js","index.js"],"names":["Formulario","insertarArticulo","useState","id","nombre","valor","cantidad","estado","articulo","actualizarArticulo","error","actualizarError","actualizarStateArticulo","e","target","name","parseInt","value","className","role","onSubmit","preventDefault","trim","uuidv4","reset","onChange","type","placeholder","Articulo","eliminarArticulo","onClick","Balance","articulos","valorPendiente","valorListo","cantidadPendiente","cantidadListo","App","articulosIniciales","JSON","parse","localStorage","getItem","actualizarArticulos","useEffect","setItem","stringify","filter","boton","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3d36cac.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({ insertarArticulo }) => {\r\n\r\n    //crear state de articulos, se creara como un objeto vacio\r\n    const [articulo, actualizarArticulo] = useState({\r\n        id: '',\r\n        nombre: '',\r\n        valor: 0,\r\n        cantidad: 0,\r\n        estado: false\r\n    });\r\n\r\n    //creamos el state para el error\r\n    const [error, actualizarError] = useState(false);\r\n\r\n    //creamos la funcion para actualizar el state de articulo\r\n    const actualizarStateArticulo = e => {\r\n        if (e.target.name === 'cantidad' || e.target.name === 'valor') {\r\n            actualizarArticulo({\r\n                ...articulo,\r\n                [e.target.name]: parseInt(e.target.value)\r\n            });\r\n        } else {\r\n            actualizarArticulo({\r\n                ...articulo,\r\n                [e.target.name]: e.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    //obtenemos las variables del objeto articulo\r\n    const { nombre, cantidad, valor } = articulo;\r\n\r\n    const submitArticulo = e => {\r\n        e.preventDefault();\r\n        //validamos si se ha insertado un nombre\r\n        if (nombre.trim() === '') {\r\n            actualizarError(true);\r\n            return;\r\n        }\r\n\r\n        if (cantidad < 1) {\r\n            articulo.cantidad = 1;\r\n        }\r\n\r\n        if (valor < 1) {\r\n            articulo.valor = 0;\r\n        }\r\n\r\n        if (articulo.cantidad > 0 && articulo.valor > 0) {\r\n            articulo.valor = articulo.valor * articulo.cantidad;\r\n        }\r\n        \r\n        actualizarError(false);\r\n\r\n        //asignamos un id\r\n        articulo.id = uuidv4();\r\n\r\n        //insertamos el articulo en la lista de articulos\r\n        insertarArticulo(articulo);\r\n\r\n        //limpiamos los valores del formulario\r\n        e.target.reset();\r\n        actualizarArticulo({\r\n            id: '',\r\n            nombre: '',\r\n            valor: 0,\r\n            cantidad: 0\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            { error ? <div className=\"alert alert-danger text-center\" role=\"alert\">Ingrese un articulo</div> : null}\r\n            <form onSubmit={submitArticulo} className=\"col-12\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"d-flex justify-content-center col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n                        <input onChange={actualizarStateArticulo} name=\"nombre\" type=\"text\" className=\"form-control form-control-lg text-center\" placeholder=\"Ingrese un articulo*\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center mt-2\">\r\n                    <div className=\"d-flex justify-content-center col-xl-3 col-lg-3 col-md-3 col-sm-6 col-6\">\r\n                        <input type=\"number\" onChange={actualizarStateArticulo} name=\"cantidad\" className=\"form-control form-control-lg text-center\" placeholder=\"cantidad\" />\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center col-xl-3 col-lg-3 col-md-3 col-sm-6 col-6\">\r\n                        <input type=\"number\" onChange={actualizarStateArticulo} name=\"valor\" className=\"form-control form-control-lg text-center\" placeholder=\"valor\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center mt-2\">\r\n                    <div className=\"d-flex justify-content-center col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\">Agregar</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nFormulario.propTypes = {\r\n    insertarArticulo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import React, { Fragment } from 'react';\r\nimport { FiCheck, FiEdit } from \"react-icons/fi\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Articulo = ({ articulo, eliminarArticulo, actualizarArticulo }) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"col-xl-8 col-md-8 mt-2\">\r\n                {articulo.estado ?\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"justify-content-center col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\r\n                            <div className=\"card text-white bg-success mb-3\">\r\n                                <div className=\"card-header text-center\"><h5>{articulo.nombre} <FiCheck /></h5></div>\r\n                                <div className=\"card-body\">\r\n                                    <h6>Cantidad: {articulo.cantidad}</h6>\r\n                                    <h6>Valor: {articulo.valor}</h6>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                            <button className=\"btn btn-success btn-lg px-1 mb-3\" onClick={() => actualizarArticulo(articulo.id, 0)}>Pendiente</button>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                            <button className=\"btn btn-danger btn-lg px-2 mb-3\"\r\n                                onClick={() => eliminarArticulo(articulo.id)}>\r\n                                Eliminar</button>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"justify-content-center col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\r\n                            <div className=\"card bg-warning mb-3\">\r\n                                <div className=\"card-header text-center\"><h5>{articulo.nombre} <FiEdit /></h5></div>\r\n                                <div className=\"card-body\">\r\n                                    <h6>Cantidad: {articulo.cantidad}</h6>\r\n                                    <h6>Valor: {articulo.valor}</h6>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                            <button className=\"btn btn-warning btn-lg px-4 mb-3\" onClick={() => actualizarArticulo(articulo.id, 1)}>Listo</button>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center col-xl-3 col-lg-3 col-md-3 col-sm-3 col-3\">\r\n                            <button className=\"btn btn-danger btn-lg px-2 mb-3\"\r\n                                onClick={() => eliminarArticulo(articulo.id)}>\r\n                                Eliminar</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nArticulo.propTypes = {\r\n    articulo: PropTypes.object.isRequired,\r\n    eliminarArticulo: PropTypes.func.isRequired,\r\n    actualizarArticulo: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Articulo;","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Balance = ({ articulos }) => {\r\n\r\n    let valorPendiente = 0, valorListo = 0, cantidadPendiente = 0, cantidadListo = 0;\r\n\r\n    for (let articulo of articulos) {\r\n        if (articulo.estado) {\r\n            valorListo += articulo.valor;\r\n            cantidadListo += articulo.cantidad;\r\n        } else {\r\n            valorPendiente += articulo.valor;\r\n            cantidadPendiente += articulo.cantidad;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 col-6\">\r\n                <div className=\"card bg-warning text-center\">\r\n                    <div className=\"card-body py-1\">\r\n                        <h6>Pendientes: {cantidadPendiente}</h6>\r\n                        <h6>Valor: {valorPendiente}</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 col-6\">\r\n                <div className=\"card text-white bg-success text-center\">\r\n                    <div className=\"card-body py-1\">\r\n                        <h6>Listos: {cantidadListo}</h6>\r\n                        <h6>Valor: {valorListo}</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nBalance.propTypes = {\r\n    articulos: PropTypes.array.isRequired\r\n}\r\n\r\nexport default Balance;","import React, { Fragment, useState, useEffect } from 'react';\nimport Formulario from './components/Formulario';\nimport Articulo from './components/Articulo';\nimport Balance from './components/Balance';\n\nfunction App() {\n\n  //lista en localStorage para articulos\n  let articulosIniciales = JSON.parse(localStorage.getItem('articulos'));\n\n  //si la lista inicial esta vacia entonces le creamos un arreglo vacio\n  if (!articulosIniciales) {\n    articulosIniciales = [];\n  }\n\n  //state lista de articulos\n  const [articulos, actualizarArticulos] = useState(articulosIniciales);\n\n  //useEffect para articulos\n  useEffect(() => {\n    //si tiene elementos la guardamos en el localStorage\n    if (articulosIniciales) {\n      localStorage.setItem('articulos', JSON.stringify(articulos));\n    } else {\n      //si no existe articulos en la lista entonces guardamos un array vacio en el localStorage\n      localStorage.setItem('articulos', JSON.stringify([]));\n    }\n  }, [articulos, articulosIniciales])\n\n  //funcion que permite guardar los articulos\n  const insertarArticulo = articulo => {\n    //guardamos el articulo en el state\n    actualizarArticulos([...articulos, articulo]);\n  }\n\n  const eliminarArticulo = id => {\n    actualizarArticulos(articulos.filter(articulo => articulo.id !== id));\n  }\n\n  const actualizarArticulo = (id, boton) => {\n    actualizarArticulos(articulos.map(articulo => {\n      if (articulo.id === id && boton === 1) {\n        articulo.estado = true;\n      } else if (articulo.id === id && boton === 0) {\n        articulo.estado = false;\n      }\n      return articulo;\n    }));\n  }\n\n  return (\n    <Fragment>\n      <div className=\"container mt-2\">\n        <div className=\"row justify-content-center\">\n          <h1 className=\"text-light\">Lista de articulos</h1>\n        </div>\n        <div className=\"row justify-content-center mt-3\">\n          <Formulario\n            insertarArticulo={insertarArticulo}\n            articulos={articulos}\n          />\n        </div>\n        <div className=\"row justify-content-center mt-3\">\n          <Balance\n            articulos={articulos}\n          />\n        </div>\n        <div className=\"row justify-content-center mt-5\">\n          {articulos.map(articulo => (\n            <Articulo\n              key={articulo.id}\n              articulo={articulo}\n              eliminarArticulo={eliminarArticulo}\n              actualizarArticulo={actualizarArticulo}\n            />\n          ))}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}